library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity RAM2_8 is
	port(clk : std_logic;
		  writeEnable : in std_logic;
		  writeData : in std_logic_vector(7 downto 0);
		  writeAdress : in std_logic_vector(1 downto 0);
		  readAdress : in std_logic_vector(1 downto 0);
		  readData : out std_logic_vector(7 downto 0));
end RAM2_8;

architecture Behavioral of RAM2_8 is
	constant NUM_WORDS : integer := 3;
	subtype TDataWord is std_logic_vector(7 downto 0);
	type TMemory is array (0 to NUM_WORDS-1) of TDataWord;
	signal s_memory : TMemory;
	
begin
	process(clk)
	begin
		if(rising_edge(clk)) then
			if(writeEnable='1') then
				s_memory(to_integer(unsigned(writeAdress))) <= writeData;
			end if;
		end if;
	end process;

	readData <= s_memory(to_integer(unsigned(readAdress)));
end Behavioral;
		  